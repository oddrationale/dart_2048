library dart.js; import 'dart:collection' show ListMixin; import 'dart:nativewrappers';  JsObject get _context { throw new UnsupportedError("_context is unsupported on this platform."); }  JsObject get context { throw new UnsupportedError("context is unsupported on this platform."); }  class JsObject extends NativeFieldWrapperClass2 { JsObject.internal() { throw new UnsupportedError("new JsObject.internal() is unsupported on this platform."); }   factory JsObject(JsFunction constructor, [List arguments]) { throw new UnsupportedError("new JsObject() is unsupported on this platform."); }   static JsObject _create(JsFunction constructor, arguments) { throw new UnsupportedError("JsObject._create() is unsupported on this platform."); }   factory JsObject.fromBrowserObject(object) { throw new UnsupportedError("new JsObject.fromBrowserObject() is unsupported on this platform."); }   factory JsObject.jsify(object) { throw new UnsupportedError("new JsObject.jsify() is unsupported on this platform."); }   static JsObject _jsify(object) { throw new UnsupportedError("JsObject._jsify() is unsupported on this platform."); }   static JsObject _fromBrowserObject(object) { throw new UnsupportedError("JsObject._fromBrowserObject() is unsupported on this platform."); }   operator [](property) {}   operator []=(property, value) {}   int get hashCode {}   operator ==(other) {}   static bool _identityEquality(JsObject a, JsObject b) { throw new UnsupportedError("JsObject._identityEquality() is unsupported on this platform."); }   bool hasProperty(String property) {}   void deleteProperty(String property) {}   bool instanceof(JsFunction type) {}   String toString() {}    callMethod(String method, [List args]) {}  } class JsFunction extends JsObject { JsFunction.internal() : super.internal() { throw new UnsupportedError("new JsFunction.internal() is unsupported on this platform."); }   factory JsFunction.withThis(Function f) { throw new UnsupportedError("new JsFunction.withThis() is unsupported on this platform."); }   dynamic apply(List args, {thisArg}) {}    static JsFunction _withThis(Function f) { throw new UnsupportedError("JsFunction._withThis() is unsupported on this platform."); } } class JsArray<E> extends JsObject with ListMixin<E> { factory JsArray() { throw new UnsupportedError("new JsArray() is unsupported on this platform."); }   static JsArray _newJsArray() { throw new UnsupportedError("JsArray._newJsArray() is unsupported on this platform."); }   factory JsArray.from(Iterable<E> other) { throw new UnsupportedError("new JsArray.from() is unsupported on this platform."); }   static JsArray _newJsArrayFromSafeList(List list) { throw new UnsupportedError("JsArray._newJsArrayFromSafeList() is unsupported on this platform."); }     E operator [](index) {}   void operator []=(index, E value) {}   int get length {}   void set length(int length) {}   void add(E value) {}   void addAll(Iterable<E> iterable) {}   void insert(int index, E element) {}   E removeAt(int index) {}   E removeLast() {}   void removeRange(int start, int end) {}   void setRange(int start, int end, Iterable<E> iterable, [int skipCount = 0]) {}   void sort([int compare(E a, E b)]) {} } const _UNDEFINED = const Object();  List _stripUndefinedArgs(List args) { throw new UnsupportedError("_stripUndefinedArgs() is unsupported on this platform."); }  Function _wrapAsDebuggerVarArgsFunction(JsFunction jsFunction) { throw new UnsupportedError("_wrapAsDebuggerVarArgsFunction() is unsupported on this platform."); } 